[user]
	email = <EMAIL>
	name = <NAME>

# Override all above settings for the worktree
[includeIf "gitdir:**/<WORKTREE>/"]
  path = C:/<WORKTREE>/.gitconfig_include
# Maintain all below settings for the worktree

[core]
	sshCommand = C:/Windows/System32/OpenSSH/ssh.exe
	editor = code --wait --reuse-window
	autocrlf = false
	ignorecase = false
[sequence]
	editor = code --wait --reuse-window

[credential]
	helper = store
[credential "helperselector"]
	selected = manager-core

[alias]
	commitn = commit --no-verify
	commiten = commit --no-verify --allow-empty
	pushn = push --no-verify
	pushfn = push --no-verify --force-with-lease
	pushf = push --force-with-lease

	last = log -1 HEAD --stat
	undo = reset HEAD~1 --mixed

	br = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
	b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

	lg = !git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg1 = !git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all

	# quick amend: Amend my staged changes to the last commit, keeping the same commit message
	amend = commit --amend -C HEAD

	# forced pull: You have a local branch (e.g. for reviewing), but someone else did a forced push update on the remote branch. A regular git pull will fail, but this will just set the local branch to match the remote branch. BEWARE: this will overwrite any local commits you have made on this branch that haven't been pushed.
	pullf = !sh -c \"git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)\"
